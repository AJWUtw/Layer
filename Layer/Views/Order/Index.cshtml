@model eSaleModel.Order
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <script src="http://ajax.googleapis.com/ajax/libs/dojo/1.10.4/dojo/dojo.js" data-dojo-config="parseOnLoad: true, locale: 'es-es'"></script>

    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/dojo/1.10.4/dijit/themes/claro/claro.css" media="screen">
    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/dojo/1.10.4/dojox/form/resources/CheckedMultiSelect.css" />
    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/dojo/1.10.4/dojox/grid/resources/Grid.css" />
    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/dojo/1.10.4/dojox/grid/resources/claroGrid.css" />

    <script src="~/Scripts/grid.js"></script>
    <script src="~/Scripts/order.js"></script>
    
    <title>Index</title>
</head>
<body class="claro">
    <!--Search Condition-->
    <div data-dojo-type="dojox/layout/ContentPane" id="searchInformationContentPane" align='center'>

        <form id="searchOrderCondition" enctype="multipart/form-data">
            <table>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @name = "", @class = "form-control", @min = "0", @step = "1", @value = 0 } })
                        @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
                    </th>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.CustName, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.EditorFor(model => model.CustName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CustName, "", new { @class = "text-danger" })
                    </th>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.DropDownListFor(model => model.EmpName, (List<SelectListItem>)ViewBag.EmpNameData)
                    </th>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.ShipperName, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.DropDownListFor(model => model.ShipperName, (List<SelectListItem>)ViewBag.ShipperNameData)
                    </th>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Orderdate, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.TextBoxFor(model => model.Orderdate, new { @type = "date" })
                        @Html.ValidationMessageFor(model => model.Orderdate, "", new { @class = "text-danger" })
                    </th>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.RequiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.TextBoxFor(model => model.RequiredDate, new { @type = "date", @value = "{0:yyyy-MM-dd}" })
                        @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @class = "text-danger" })
                    </th>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.TextBoxFor(model => model.ShippedDate, new { @type = "date" })
                        @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                    </th>
                </tr>
            </table>

            <span data-dojo-type="dijit/form/Button" id="sendOrderCondition" onclick="orderAction.SearchOrderByCondition()">查詢</span>

            <span data-dojo-type="dijit/form/Button" id="insertOrder" onclick="InsertDialog.show();">新增</span>

        </form>

        <!--Search Result Grid-->

        <div id="orderStore" data-dojo-type="dojo/data/ItemFileWriteStore" data-dojo-props="url:'./GetOrder',cleadOnClose:true" data-dojo-id="orderStore"></div>
        <div>
            <table dojoType="dojox/grid/DataGrid" id="orderGrid" data-dojo-id="orderGrid" columnReordering="true" sortFields="['OrderId','CustName','O_Orderdate','O_ShippedDate']" store="orderStore" onclick="orderAction.setOrderId"  clientSort="true" selectionMode="single" autoHeight="true" autoWidth="true" rowHeight="25" noDataMessage="<span class='dojoxGridNoData'>No students found</span>" structure=searchStructure></table>
        </div>
    </div>


    <!--新增訂單-->
    <div data-dojo-type="dijit/Dialog" data-dojo-id="InsertDialog" title="新增訂單">
        <div class="dijitDialogPaneContentArea">
            <form id="insertOrderForm" enctype="multipart/form-data">
                <table>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.CustName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.DropDownListFor(model => model.CustName, (List<SelectListItem>)ViewBag.CustNameData)
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.DropDownListFor(model => model.EmpName, (List<SelectListItem>)ViewBag.EmpNameData)
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.Orderdate, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.TextBoxFor(model => model.Orderdate, new { @type = "date" })
                            @Html.ValidationMessageFor(model => model.Orderdate, "", new { @class = "text-danger" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.RequiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.TextBoxFor(model => model.RequiredDate, new { @type = "date", @value = "{0:yyyy-MM-dd}" })
                            @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @class = "text-danger" })
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.TextBoxFor(model => model.ShippedDate, new { @type = "date" })
                            @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.ShipperName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.DropDownListFor(model => model.ShipperName, (List<SelectListItem>)ViewBag.ShipperNameData)
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.Freight, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.EditorFor(model => model.Freight, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Freight, "", new { @class = "text-danger" })
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.ShipCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.EditorFor(model => model.ShipCountry, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipCountry, "", new { @class = "text-danger" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.ShipCity, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipCity, "", new { @class = "text-danger" })
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.ShipRegion, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.EditorFor(model => model.ShipRegion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipRegion, "", new { @class = "text-danger" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.ShipPostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.EditorFor(model => model.ShipPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipPostalCode, "", new { @class = "text-danger" })
                        </th>
                    </tr>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
                        </th>
                    </tr>

                </table>
            </form>
            訂單金額總計 <span id="Total"></span> 元
            <br />
            <span data-dojo-type="dijit/form/Button" onclick="gridAction.AddInsertProductRow();">+新增商品</span>

            <div id="inserProductGrid" data-dojo-id="inserProductGrid"></div>

            <div class="dijitDialogPaneActionBar">
                <span data-dojo-type="dijit/form/Button" id="insertOrderBtn" onclick="orderAction.InserOrder()">新增</span>
                <span data-dojo-type="dijit/form/Button" onclick="InsertDialog.hide();">回上一頁</span>
            </div>

        </div>
    </div>



    <!--修改訂單-->
    <div data-dojo-type="dijit/Dialog" data-dojo-id="UpdateDialog" title="新增訂單">
        <div class="dijitDialogPaneContentArea">
            <div id="test"></div>
            訂單金額總計 <span id="updateTotal"></span> 元
            <br />
            <span data-dojo-type="dijit/form/Button" onclick="gridAction.AddUpdateProductRow()">+新增商品</span>

            <div id="updateProductGrid" data-dojo-id="updateProductGrid"></div>

            <div class="dijitDialogPaneActionBar">
                <span data-dojo-type="dijit/form/Button" id="updateOrderBtn" onclick="orderAction.UpdateOrder()">修改</span>
                <span data-dojo-type="dijit/form/Button" onclick="UpdateDialog.hide();">回上一頁</span>
            </div>
        </div>
    </div>

    <div data-dojo-type="dijit/Dialog" data-dojo-id="DeleteDialog" title="新增訂單">
        <div class="dijitDialogPaneContentArea">
            是否刪除
            <div id="DeleteDialogContent"></div>
            <div class="dijitDialogPaneActionBar">
                <span data-dojo-type="dijit/form/Button" id="deleteOrderBtn" onclick="orderAction.DeleteOrder()">刪除</span>
                <span data-dojo-type="dijit/form/Button" onclick="DeleteDialog.hide();">取消</span>
            </div>
        </div>
    </div>
</body>
</html>
